LVM
====================================
lvm（logical volume manager）逻辑卷管理的重点在于可以弹性的调整能够filesystem的容量，而非在于数据
的存储效率和安全上面。

基础的概念
--------------------------------------------

pv(物理卷)
    物理卷是指硬盘分区或从逻辑上与磁盘分区具有同样功能的设备，是lvm的基本存储逻辑块。
vg(卷组)
    卷组类似与非lvm系统的物理硬盘，其由物理卷组成，可以创建一个或多个分区。
lv(逻辑卷)
    逻辑卷类似非lvm系统的系统分区，在逻辑卷上建立文件系统

pv,vg,lv是如何关联的呢。 

首先把分散的，大小不同的多个pv整合在一起组成一个vg卷组， 这个卷组的空间是比较大的， 然后在这个大的卷组上面去创建多个lv，
每个lv根据自己的需求大小去创建，不用管底层数据存储在那个pv上，那个磁盘上。

lvm的实现
--------------------------------------------------

创建pv
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
pv是逻辑卷管理的底层元素， 这个是基础，相关的命令也比较多。

.. code-block:: text

    pvcreate    创建实体pratition为pv
    pvscan      搜索系统里面具有的pv资源
    pvdisplay   显示目前系统的pv状态
    pvremove    将pv属性移除

创建vg
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
vg相关的命令

.. code-block:: text

    vgcreate    创建vg的
    vgscan      扫描系统的vg
    vgdisplay   显示目前系统上面的vg信息
    vgextend    在vg内添加额外的pv
    vgreduce    在vg内移除pv
    vgchang     配置vg是否启动
    vgremove    删除一个vg

创建lv
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lv相关的命令

.. code-block:: text

    lvcreate    创建lv
    lvscan      扫描系统lv
    lvdisplay   显示系统lv状态嘻嘻你
    lvextend    扩展lv
    lvreduce    缩减lv
    lvremove    移除lv
    lvresize    对lv进行大小调整

扩容lv
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

#. 使用fdisk创建新分区（具有8e）
#. pvcreate创建pv
#. vgextend将新的pv加入到vg中
#. lvresize 调整要扩展的大小
#. 使用resize2fs来将文件系统的容量调整和lv同步。

.. note:: 如果原有的vg空间足够大的话，前三步可以跳过。

缩减lv
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

#. 先卸载已经挂载的lv
#. 强制磁盘检查（e2fsck -f ）
#. resitefs来调整文件系统大小
#. lvreduce来调整lv大小
#. mount  

快照
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

快照是当时的系统数据记录下来，在未来如果有数据变动，则会将变更前的数据放到快照去进行保存起来。
利用快照功能，可以轻松的完成长时间的备份工作，且保证数据是在同一个时刻状态下的。

创建快照和创建lv基本一样的， 只需要加入特性的选项-s 即可。 挂载的时候加入 ro选项即可。


