<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>23-2017-12-18-练习-脚本进阶服务</title>
    <link rel="stylesheet" href="../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../_static/pygments.css" type="text/css" /> 
  </head>
  <body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="id1">
<h1>23-2017-12-18-练习-脚本进阶服务</h1>
<div class="section" id="id2">
<h2>练习3-函数</h2>
<p>1、编写函数，实现OS的版本判断</p>
<p>2、编写函数，实现取出当前系统eth0的IP地址</p>
<p>3、编写函数，实现打印绿色OK和红色FAILED</p>
<p>4、编写函数，实现判断是否无位置参数，如无参数，提示错误</p>
<div class="highlight-bash"><div class="highlight"><pre><span></span><span class="c1"># color</span>
<span class="nv">RED</span><span class="o">=</span><span class="s2">&quot;\033[0;31m&quot;</span>
<span class="nv">YELLOW</span><span class="o">=</span><span class="s2">&quot;\033[0;33m&quot;</span>
<span class="nv">GREEN</span><span class="o">=</span><span class="s2">&quot;\033[1;32m&quot;</span>
<span class="nv">DARKGREEN</span><span class="o">=</span><span class="s2">&quot;\033[0;32m&quot;</span>
<span class="nv">OCHRE</span><span class="o">=</span><span class="s2">&quot;\033[38;5;95m&quot;</span>
<span class="nv">BLUE</span><span class="o">=</span><span class="s2">&quot;\033[1;34m&quot;</span>
<span class="nv">WHITE</span><span class="o">=</span><span class="s2">&quot;\033[0;37m&quot;</span>
<span class="nv">RESET</span><span class="o">=</span><span class="s2">&quot;\033[0m&quot;</span>

get_os_version<span class="o">(){</span>
        <span class="nb">echo</span> <span class="sb">`</span> cat /etc/system-release <span class="p">|</span>sed -r <span class="s1">&#39;s@.*release ([0-9]+).*@\1@&#39;</span> <span class="sb">`</span>
<span class="o">}</span>
get_ip_of_eth0<span class="o">(){</span>
        <span class="nb">echo</span>    <span class="sb">`</span>ip a show dev eth0 <span class="p">|</span> sed -nr <span class="s1">&#39;/[[:space:]]+inet /s@[[:space:]]+inet (.*)/.*@\1@p&#39;</span><span class="sb">`</span>
<span class="o">}</span>
print_ok<span class="o">(){</span>
        <span class="nb">echo</span> -e <span class="si">${</span><span class="nv">GREEN</span><span class="si">}</span>OK<span class="si">${</span><span class="nv">RESET</span><span class="si">}</span>
<span class="o">}</span>
print_failed<span class="o">(){</span>
        <span class="nb">echo</span>  -e <span class="si">${</span><span class="nv">RED</span><span class="si">}</span>FAILED<span class="si">${</span><span class="nv">RESET</span><span class="si">}</span>
<span class="o">}</span>
has_parameter<span class="o">(){</span>
        <span class="k">if</span> <span class="o">[</span> <span class="s2">&quot;</span><span class="nv">$#</span><span class="s2">&quot;</span> -eq <span class="m">0</span> <span class="o">]</span> <span class="p">;</span> <span class="k">then</span>
                <span class="nb">echo</span> <span class="s2">&quot;not a parameter&quot;</span>
                <span class="k">return</span> <span class="m">1</span>
        <span class="k">fi</span>
</pre></div>
</div>
</div>
<div class="section" id="sysv">
<h2>练习4-sysv</h2>
<div class="highlight-text"><div class="highlight"><pre><span></span>编写服务脚本/root/bin/testsrv.sh，完成如下要求
(1) 脚本可接受参数：start, stop, restart, status
(2) 如果参数非此四者之一，提示使用格式后报错退出
(3) 如是start:则创建/var/lock/subsys/ SCRIPT_NAME , 并显示“启动成功”
考虑：如果事先已经启动过一次，该如何处理？
(4) 如是stop:则删除/var/lock/subsys/ SCRIPT_NAME , 并显示“停止完成”
考虑：如果事先已然停止过了，该如何处理？
(5) 如是restart，则先stop, 再start
考虑：如果本来没有start，如何处理？
(6) 如是status, 则如果/var/lock/subsys/ SCRIPT_NAME 文件存在，则显示
“ SCRIPT_NAME is running...”
如果/var/lock/subsys/ SCRIPT_NAME 文件不存在，则显示“ SCRIPT_NAME
is stopped...”其中： SCRIPT_NAME 为当前脚本名
(7)在所有模式下禁止启动该服务，可用chkconfig 和 service命令管理
</pre></div>
</div>
<div class="highlight-bash"><div class="highlight"><pre><span></span><span class="ch">#!/bin/bash</span>
<span class="c1"># chkconfig:   345 99 99</span>
<span class="c1"># description:      this is a testsrv</span>


. /etc/init.d/functions

<span class="nv">lockfile</span><span class="o">=</span>/var/lock/subsys/<span class="nv">$0</span>

start<span class="o">(){</span>
    <span class="k">if</span> <span class="o">[</span> -e <span class="nv">$lockfile</span> <span class="o">]</span> <span class="p">;</span> <span class="k">then</span>
        action <span class="s2">&quot;</span><span class="nv">$0</span><span class="s2"> is running&quot;</span>
    <span class="k">else</span>
        touch <span class="nv">$lockfile</span>
        <span class="k">if</span> <span class="o">[</span> <span class="s2">&quot;</span><span class="nv">$?</span><span class="s2">&quot;</span> -eq <span class="m">0</span> <span class="o">]</span> <span class="p">;</span> <span class="k">then</span>
            action <span class="s2">&quot;</span><span class="nv">$0</span><span class="s2">  start&quot;</span>
        <span class="k">else</span>
            action <span class="s2">&quot;</span><span class="nv">$0</span><span class="s2">  failed&quot;</span> <span class="nb">false</span>
        <span class="k">fi</span>
    <span class="k">fi</span>
<span class="o">}</span>
stop<span class="o">(){</span>
    <span class="k">if</span> <span class="o">[</span> -e <span class="nv">$lockfile</span> <span class="o">]</span> <span class="p">;</span> <span class="k">then</span>
        rm -rf <span class="nv">$lockfile</span>
        <span class="k">if</span> <span class="o">[</span> <span class="s2">&quot;</span><span class="nv">$?</span><span class="s2">&quot;</span> -eq <span class="m">0</span> <span class="o">]</span> <span class="p">;</span> <span class="k">then</span>
            action <span class="s2">&quot;</span><span class="nv">$0</span><span class="s2"> stop&quot;</span>
        <span class="k">else</span>
            action <span class="s2">&quot;</span><span class="nv">$0</span><span class="s2"> stop failed&quot;</span> <span class="nb">false</span>
        <span class="k">fi</span>
    <span class="k">else</span>
        action <span class="s2">&quot;</span><span class="nv">$0</span><span class="s2"> is stoped&quot;</span>
    <span class="k">fi</span>
<span class="o">}</span>
restart<span class="o">(){</span>
    start
    stop
<span class="o">}</span>
status<span class="o">(){</span>
    <span class="k">if</span> <span class="o">[</span> -e <span class="nv">$lockfile</span> <span class="o">]</span> <span class="p">;</span> <span class="k">then</span>
        action <span class="s2">&quot;</span><span class="nv">$0</span><span class="s2"> running&quot;</span>
    <span class="k">else</span>
        action <span class="s2">&quot;</span><span class="nv">$0</span><span class="s2"> stoped&quot;</span>
    <span class="k">fi</span>
<span class="o">}</span>
usage<span class="o">(){</span>
    <span class="nb">echo</span> <span class="s2">&quot;</span><span class="nv">$0</span><span class="s2"> {start|stop|status|restart}&quot;</span>
<span class="o">}</span>
<span class="k">case</span> <span class="nv">$1</span> in
start<span class="o">)</span>
    start<span class="p">;;</span>
stop<span class="o">)</span>
    stop<span class="p">;;</span>
restart<span class="o">)</span>
    restart<span class="p">;;</span>
status<span class="o">)</span>
    status<span class="p">;;</span>
*<span class="o">)</span>
    usage<span class="p">;;</span>
<span class="k">esac</span>
</pre></div>
</div>
</div>
<div class="section" id="copycmd">
<h2>练习5-copycmd</h2>
<div class="highlight-text"><div class="highlight"><pre><span></span>编写脚本/root/bin/copycmd.sh
(1) 提示用户输入一个可执行命令名称
(2) 获取此命令所依赖到的所有库文件列表
(3) 复制命令至某目标目录(例如/mnt/sysroot)下的对应路径下
如：/bin/bash ==&gt; /mnt/sysroot/bin/bash
/usr/bin/passwd ==&gt; /mnt/sysroot/usr/bin/passwd
(4) 复制此命令依赖到的所有库文件至目标目录下的对应路径下
： 如：/lib64/ld-linux-x86-64.so.2 ==&gt;
/mnt/sysroot/lib64/ld-linux-x86-64.so.2
(5)每次复制完成一个命令后，不要退出，而是提示用户键入新
的要复制的命令，并重复完成上述功能；直到用户输入quit退出
</pre></div>
</div>
<div class="highlight-bash"><div class="highlight"><pre><span></span><span class="ch">#!/bin/bash</span>
<span class="c1">#================================================</span>
<span class="c1">#FileName   :copycmd.sh</span>
<span class="c1">#Author     :zhaojiedi</span>
<span class="c1">#Description:</span>
<span class="c1">#DateTime   :2017-12-22 15:57:39</span>
<span class="c1">#Version    :V1.0</span>
<span class="c1">#Other      :</span>
<span class="c1">#================================================</span>
<span class="nv">dst</span><span class="o">=</span>/mnt/sysimage
<span class="nv">overwrite</span><span class="o">=</span>yes

<span class="k">if</span> <span class="o">[</span> ! -e <span class="s2">&quot;</span><span class="nv">$dst</span><span class="s2">&quot;</span> <span class="o">]</span> <span class="p">;</span> <span class="k">then</span>
        mkdir -pv <span class="nv">$dst</span>
<span class="k">fi</span>
my_cp<span class="o">()</span> <span class="o">{</span>
        <span class="nb">local</span> <span class="nv">src</span><span class="o">=</span><span class="nv">$1</span>
        <span class="nb">local</span> <span class="nv">dst</span><span class="o">=</span><span class="nv">$2</span>
        <span class="nb">local</span> <span class="nv">dir</span><span class="o">=</span><span class="sb">`</span>dirname <span class="nv">$dst</span><span class="sb">`</span>
        <span class="k">if</span> <span class="o">[</span> ! -e <span class="nv">$dir</span> <span class="o">]</span> <span class="p">;</span> <span class="k">then</span>
                mkdir -pv <span class="nv">$dir</span>
        <span class="k">fi</span>

        <span class="k">if</span> <span class="o">[</span> ! -f <span class="s2">&quot;</span><span class="nv">$dst</span><span class="s2">&quot;</span>  -o <span class="s2">&quot;</span><span class="nv">$overwrite</span><span class="s2">&quot;</span> <span class="o">==</span> <span class="s2">&quot;yes&quot;</span> <span class="o">]</span> <span class="p">;</span> <span class="k">then</span>
                cp  <span class="nv">$src</span> <span class="nv">$dst</span>
        <span class="k">fi</span>
<span class="o">}</span>


<span class="k">while</span> true<span class="p">;</span> <span class="k">do</span>
        <span class="nb">read</span> -p <span class="s2">&quot;enter you cmd :  &quot;</span> short_cmd
        <span class="k">if</span> <span class="o">[</span> <span class="s2">&quot;</span><span class="nv">$short_cmd</span><span class="s2">&quot;</span> <span class="o">==</span> <span class="s2">&quot;quit&quot;</span> <span class="o">]</span> <span class="p">;</span> <span class="k">then</span>
                <span class="nb">exit</span> <span class="m">0</span>
        <span class="k">fi</span>
        <span class="nb">type</span> <span class="nv">$short_cmd</span> <span class="m">2</span>&gt;/dev/null <span class="p">|</span>grep -q <span class="s2">&quot;builtin&quot;</span>
        <span class="k">if</span> <span class="o">[</span> <span class="s2">&quot;</span><span class="nv">$?</span><span class="s2">&quot;</span> -eq <span class="m">0</span> <span class="o">]</span> <span class="p">;</span> <span class="k">then</span>
                <span class="nb">echo</span> <span class="s2">&quot;this is a buildin cmd, nothing todo,  input &#39;bash&#39; for copy buildin cmd&quot;</span>
                <span class="k">continue</span>
        <span class="k">fi</span>
        <span class="nv">short_cmd</span><span class="o">=</span><span class="sb">`</span>basename <span class="nv">$short_cmd</span><span class="sb">`</span> <span class="p">&amp;</span>&gt;/dev/null
        <span class="nv">long_cmd</span><span class="o">=</span><span class="sb">`</span>which --skip-alias --skip-functions --skip-dot --skip-tilde <span class="nv">$short_cmd</span> <span class="m">2</span>&gt;/dev/null<span class="sb">`</span>
        <span class="k">if</span> <span class="o">[</span> <span class="s2">&quot;</span><span class="nv">$?</span><span class="s2">&quot;</span> -ne <span class="m">0</span> <span class="o">]</span> <span class="p">;</span> <span class="k">then</span>
                <span class="nb">echo</span> <span class="s2">&quot;not a valid command, please check and try again&quot;</span>
                <span class="k">continue</span>
        <span class="k">fi</span>
        <span class="c1"># cp bin</span>
        my_cp <span class="nv">$long_cmd</span> <span class="nv">$dst$long_cmd</span>
        <span class="c1"># cp lib</span>
        <span class="k">for</span> lib in <span class="sb">`</span>ldd <span class="nv">$long_cmd</span> <span class="p">|</span>egrep -o  <span class="s2">&quot;/[^[:space:]]+&quot;</span> <span class="sb">`</span> <span class="p">;</span> <span class="k">do</span>
                <span class="c1">#echo -e &quot;\n$lib\n&quot;</span>
                my_cp <span class="nv">$lib</span> <span class="nv">$dst$lib</span>
        <span class="k">done</span>
        <span class="c1"># cp man</span>
        <span class="c1">#for man in `man -aw $short_cmd` ; do</span>
        <span class="c1">#       my_cp $man ${dst}${man}</span>
        <span class="c1">#done</span>
<span class="k">done</span>
</pre></div>
</div>
</div>
<div class="section" id="id3">
<h2>练习6-</h2>
<div class="highlight-text"><div class="highlight"><pre><span></span>1、编写函数实现两个数字做为参数，返回最大值斐波那契数列又称黄金分割数列，因数学家列昂纳多·斐波那
契以兔子繁殖为例子而引入，故又称为“兔子数列”，指的是
这样一个数列：0、1、1、2、3、5、8、13、21、34、……
，斐波纳契数列以如下被以递归的方法定义：F（0）=0，F（
1）=1，F（n）=F(n-1)+F(n-2)（n≥2）
利用函数，求n阶斐波那契数列
</pre></div>
</div>
<div class="highlight-bash"><div class="highlight"><pre><span></span><span class="ch">#!/bin/bash</span>
<span class="c1">#================================================</span>
<span class="c1">#FileName   :tuzishulie_46_zhaojiedi.sh</span>
<span class="c1">#Author     :zhaojiedi</span>
<span class="c1">#Description:</span>
<span class="c1">#DateTime   :2017-12-22 15:28:04</span>
<span class="c1">#Version    :V1.0</span>
<span class="c1">#Other      :</span>
<span class="c1">#================================================</span>
f<span class="o">()</span> <span class="o">{</span>
        <span class="k">if</span> <span class="o">[</span> <span class="s2">&quot;</span><span class="nv">$1</span><span class="s2">&quot;</span> -eq <span class="m">0</span> <span class="o">]</span> <span class="p">;</span> <span class="k">then</span>
                <span class="nb">echo</span> <span class="m">0</span>
                <span class="k">return</span> <span class="m">0</span>
        <span class="k">fi</span>
        <span class="k">if</span> <span class="o">[</span> <span class="s2">&quot;</span><span class="nv">$1</span><span class="s2">&quot;</span> -eq <span class="m">1</span> <span class="o">]</span> <span class="p">;</span> <span class="k">then</span>
                <span class="nb">echo</span> <span class="m">1</span>
                <span class="k">return</span> <span class="m">0</span>
        <span class="k">fi</span>
        <span class="nb">echo</span> $<span class="o">[</span><span class="sb">`</span>f $<span class="o">[</span><span class="nv">$1</span> -2<span class="o">]</span><span class="sb">`</span> + <span class="sb">`</span>f $<span class="o">[</span><span class="nv">$1</span> -1<span class="o">]</span><span class="sb">`</span><span class="o">]</span>
<span class="o">}</span>

<span class="nb">echo</span> <span class="sb">`</span> f <span class="m">10</span><span class="sb">`</span>
</pre></div>
</div>
<dl class="simple">
<dt>::</dt>
<dd><p>2、汉诺塔（又称河内塔）问题是源于印度一个古老传说。大梵天
创造世界的时候做了三根金刚石柱子，在一根柱子上从下往上
按照大小顺序摞着64片黄金圆盘。大梵天命令婆罗门把圆盘
从下面开始按大小顺序重新摆放在另一根柱子上。并且规定，
在小圆盘上不能放大圆盘，在三根柱子之间一次只能移动一个
圆盘，利用函数，实现N片盘的汉诺塔的移动步骤</p>
</dd>
</dl>
<div class="highlight-bash"><div class="highlight"><pre><span></span><span class="ch">#!/bin/bash</span>
f<span class="o">(){</span>
        <span class="nv">v1</span><span class="o">=</span>$<span class="o">[</span><span class="nv">$1</span>%3<span class="o">]</span>
        <span class="nv">v2</span><span class="o">=</span>$<span class="o">[</span><span class="nv">$2</span>%3<span class="o">]</span>
        <span class="nv">v</span><span class="o">=</span>$<span class="o">[</span><span class="m">3</span>-v1-v2<span class="o">]</span>
        <span class="k">if</span> <span class="o">[</span> <span class="s2">&quot;</span><span class="nv">$3</span><span class="s2">&quot;</span> -eq <span class="m">1</span> <span class="o">]</span> <span class="p">;</span> <span class="k">then</span>
                <span class="k">if</span>  <span class="o">[</span> <span class="s2">&quot;</span>$<span class="s2">[</span><span class="nv">$4</span><span class="s2">%2]&quot;</span> -eq <span class="m">1</span> <span class="o">]</span> <span class="p">;</span> <span class="k">then</span>
                        <span class="nb">echo</span> -e <span class="s2">&quot;</span><span class="nv">$v1</span><span class="s2">=&gt;</span><span class="nv">$v2</span><span class="s2">\n&quot;</span>
                <span class="k">else</span>
                        <span class="nb">echo</span>  -e <span class="s2">&quot;</span><span class="nv">$v</span><span class="s2">=&gt;</span><span class="nv">$v2</span><span class="s2">\n&quot;</span>
                <span class="k">fi</span>
                <span class="k">return</span> <span class="m">0</span>
        <span class="k">fi</span>
        <span class="nv">vv</span><span class="o">=</span>$<span class="o">[</span><span class="nv">$4</span>-1<span class="o">]</span>
        <span class="nb">echo</span> -e <span class="sb">`</span>f <span class="nv">$v1</span> <span class="nv">$v</span> $<span class="o">[</span><span class="nv">$3</span>-1<span class="o">]</span> <span class="nv">$vv</span><span class="sb">`</span>
        <span class="nb">echo</span> -e <span class="s2">&quot;</span><span class="nv">$v1</span><span class="s2">=&gt;</span><span class="nv">$v2</span><span class="s2">&quot;</span>
        <span class="nb">echo</span>  -e <span class="sb">`</span>f <span class="nv">$v</span> <span class="nv">$v2</span> $<span class="o">[</span><span class="nv">$3</span>-1<span class="o">]</span> <span class="nv">$vv</span><span class="sb">`</span>
<span class="o">}</span>
f2<span class="o">(){</span>
        <span class="nb">echo</span> <span class="sb">`</span>f <span class="m">0</span> <span class="m">2</span> <span class="nv">$1</span> <span class="nv">$1</span><span class="sb">`</span>
<span class="o">}</span>
<span class="k">if</span> <span class="o">[</span> <span class="s2">&quot;</span><span class="nv">$#</span><span class="s2">&quot;</span> -ne <span class="m">1</span> <span class="o">]</span> <span class="p">;</span> <span class="k">then</span>
        <span class="nb">echo</span> <span class="s2">&quot; must a parameter,only one &quot;</span>
<span class="k">fi</span>

f2 <span class="nv">$1</span>
</pre></div>
</div>
</div>
<div class="section" id="id4">
<h2>练习6-</h2>
<p>1、输入若干个数值存入数组中，采用冒泡算法进行升序或降序排序</p>
<div class="highlight-bash"><div class="highlight"><pre><span></span><span class="ch">#!/bin/bash</span>
<span class="c1">#================================================</span>
<span class="c1">#FileName   :test_bubble_sort_46_zhaojiedi.sh</span>
<span class="c1">#Author     :zhaojiedi</span>
<span class="c1">#Description:</span>
<span class="c1">#DateTime   :2017-12-26 17:49:51</span>
<span class="c1">#Version    :V1.0</span>
<span class="c1">#Other      :</span>
<span class="c1">#================================================</span>

<span class="nb">read</span>  -p <span class="s2">&quot;enter some value &quot;</span>  -a arr

<span class="nv">cnt</span><span class="o">=</span><span class="si">${#</span><span class="nv">arr</span><span class="p">[*]</span><span class="si">}</span>
<span class="nb">echo</span> <span class="s2">&quot;count=&quot;</span><span class="nv">$cnt</span>
my_print <span class="o">(){</span>
        <span class="k">for</span> i in <span class="sb">`</span>seq <span class="m">0</span> $<span class="o">[</span>cnt-1<span class="o">]</span><span class="sb">`</span><span class="p">;</span> <span class="k">do</span>
                <span class="nb">echo</span> -ne <span class="s2">&quot;</span><span class="si">${</span><span class="nv">arr</span><span class="p">[</span><span class="nv">$i</span><span class="p">]</span><span class="si">}</span><span class="s2">\t&quot;</span>
        <span class="k">done</span>
        <span class="nb">echo</span>
<span class="o">}</span>
<span class="nb">echo</span> <span class="s2">&quot;befor bubble sort&quot;</span>
my_print

<span class="k">for</span> i in <span class="sb">`</span>seq <span class="m">0</span> $<span class="o">[</span>cnt-1<span class="o">]</span><span class="sb">`</span><span class="p">;</span> <span class="k">do</span>
        <span class="k">for</span> j in <span class="sb">`</span>seq <span class="m">0</span> $<span class="o">[</span>i-1<span class="o">]</span><span class="sb">`</span><span class="p">;</span><span class="k">do</span>
                <span class="k">if</span> <span class="o">[</span> <span class="s2">&quot;</span><span class="si">${</span><span class="nv">arr</span><span class="p">[</span><span class="nv">$i</span><span class="p">]</span><span class="si">}</span><span class="s2">&quot;</span> -lt <span class="s2">&quot;</span><span class="si">${</span><span class="nv">arr</span><span class="p">[</span><span class="nv">$j</span><span class="p">]</span><span class="si">}</span><span class="s2">&quot;</span> <span class="o">]</span> <span class="p">;</span> <span class="k">then</span>
                        <span class="nv">tmp</span><span class="o">=</span><span class="si">${</span><span class="nv">arr</span><span class="p">[</span><span class="nv">$i</span><span class="p">]</span><span class="si">}</span>
                        arr<span class="o">[</span><span class="nv">$i</span><span class="o">]=</span><span class="si">${</span><span class="nv">arr</span><span class="p">[</span><span class="nv">$j</span><span class="p">]</span><span class="si">}</span>
                        arr<span class="o">[</span><span class="nv">$j</span><span class="o">]=</span><span class="nv">$tmp</span>
                <span class="k">fi</span>
        <span class="k">done</span>
<span class="k">done</span>

<span class="nb">echo</span> <span class="s2">&quot;after bubble sort&quot;</span>
my_print
</pre></div>
</div>
<p>2、将下图所示，实现转置矩阵matrix.sh</p>
<div class="highlight-text"><div class="highlight"><pre><span></span>1 2 3          1 4 7
4 5 6  ===&gt;    2 5 8
7 8 9          3 6 9
</pre></div>
</div>
<div class="highlight-python"><div class="highlight"><pre><span></span><span class="ch">#!/usr/bin/python</span>
<span class="k">def</span> <span class="nf">trans</span><span class="p">(</span><span class="n">m</span><span class="p">):</span>
        <span class="k">return</span> <span class="nb">zip</span><span class="p">(</span><span class="o">*</span><span class="n">m</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">my_print</span><span class="p">(</span><span class="n">m</span><span class="p">):</span>
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">m</span> <span class="p">:</span>
                <span class="k">print</span> <span class="n">i</span>

<span class="n">m</span> <span class="o">=</span> <span class="p">[[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span> <span class="p">[</span><span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">],</span> <span class="p">[</span><span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">9</span><span class="p">]]</span>
<span class="k">print</span> <span class="s2">&quot;before transform&quot;</span>
<span class="n">my_print</span><span class="p">(</span><span class="n">m</span><span class="p">)</span>
<span class="n">m2</span><span class="o">=</span> <span class="n">trans</span><span class="p">(</span><span class="n">m</span><span class="p">)</span>
<span class="k">print</span> <span class="s2">&quot;after transform&quot;</span>
<span class="n">my_print</span><span class="p">(</span><span class="n">m2</span><span class="p">)</span>
</pre></div>
</div>
</div>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>